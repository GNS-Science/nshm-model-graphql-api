[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = google
per-file-ignores = __init__.py:F401,
    tests/*.py: D100,D101,D102
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    .serverless,
    node_modules,
    migrations,
    # By default test codes will be linted.
    # tests

[mypy]
ignore_missing_imports = True

[mypy-nshm.migrations.*]
ignore_errors = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[tox:tox]
isolated_build = true
envlist = py310, format, lint, build

[gh-actions]
python =
    3.10: py310, format, lint, build

[testenv]
allowlist_externals = pytest
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
    TESTING = 1
commands =
    # pytest nzshm_model_graphql_api nshm pipeline
    pytest --cov=pipeline --cov-branch --cov-report=xml --cov-report=term-missing pipeline

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort nzshm_model_graphql_api nshm pipeline
    black nzshm_model_graphql_api nshm pipeline

[testenv:lint]
allowlist_externals =
    flake8
    mypy
extras =
    test
commands =
    flake8 nzshm_model_graphql_api nshm pipeline
    mypy nzshm_model_graphql_api nshm pipeline

[testenv:build]
allowlist_externals =
    poetry
    # mkdocs
    # twine
extras =
    doc
    dev
commands =
    poetry build
    # mkdocs build
    # twine check dist/*

[tool:pytest]
testpaths =
    pipeline
# markers =
#     slow: slow tests